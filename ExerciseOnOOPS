using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection.Metadata;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace WiproTraining


//Create a C# program that requests three names of people from the user and stores them in an array of objects of type Person.
//To do this, first create a Person class that has a Name property of type string and override the ToString() method.
// End the program by reading people and executing the ToString() method on the screen.



{
    public class Person
    {
        public string Name { get; set; }
        public Person(string name)
        {
            Name = name;
        }
        public override string ToString()
        {
            return $"Hello! My name is: {Name}";
        }
    }

    class Program
    {
        static void Main()
        {
            Person[] people = new Person[3];

            for (int i = 0; i < 3; i++)
            {
                Console.WriteLine($"Enter name {i + 1}:");
                string name = Console.ReadLine();
                people[i] = new Person(name);
            }

            Console.WriteLine("\nList of people:");
            foreach (Person person in people)
            {
                Console.WriteLine(person.ToString());
            }
        }
    }
}



//Create a C# program that prompts the user for three names of people and stores them in an array of Person-type objects. 
//To do this, first create a Person class that has a Name property of type string, a constructor that receives the name as 
//a parameter, a destructor that assigns the name to empty and overwrites the ToString () method.
//End the program by reading the people and executing the ToString () method on screen.




/*{
    public class Person
    {
        public String Name { get; set; }

        public Person(string name)
        {
            Name= name; 
        }
        ~Person()
        {
            Name = string.Empty;

        }
        public override String ToString()
        {
            return $"Hello! My name is:{Name}";
        }


        class Program
        {
            static void Main()
            {
                Person[] people = new Person[3];

                for (int i = 0; i < 3; i++)
                {
                    Console.WriteLine($"Enter name {i + 1}:");
                    string name = Console.ReadLine();
                    people[i] = new Person(name);
                }

                Console.WriteLine("\nList of people:");
                foreach (Person person in people)
                {
                    Console.WriteLine(person.ToString());
                }
            }
        }


    }
}*/


//Create a new C # project with three classes plus another class to test the logic in your code. The main classes of the program
//are the following classes:

//Person
//Student
//Professor
//The Student and Teacher classes inherit from the Person class.

//The Student class will include a public Study() method that will write I'm studying on the screen.

//The Person class must have two public methods Greet() and SetAge(int age) that will assign the age of the person.

//The Teacher class will include a public Explain() method that will write I'm explaining on the screen.

//Also create a public method ShowAge() in the Student class that writes My age is: x years old on the screen.

//You must create another test class called StudentProfessorTest with a Main method to do the following:

//Create a new Person and make him say hello
//Create a new Student, set an age, say hello, and display her age on the screen.
//Create a new Teacher, set an age, say hello and start the explanation.


/*{
    public class Person
    {
        protected int age;
        public void Greet() 
        {
            Console.WriteLine("Hello!");
        }
        public void SetAge(int Age) 
        {
            this.age = Age;
        }
    }
    public class Student : Person
    {
        public void Study()
        {
            Console.WriteLine("I'm Studying");
        }
        public void ShowAge()
        {
            Console.WriteLine($"My Age is:{age}");
        }

    }
    
    public class Professor
    {

    }

    public class Teacher : Person
    {
        public void Explain()
        {
            Console.WriteLine("I'm Explaining.");
        }

    }

    class StudentProfessorTest
    {
        static void Main()
        {
            Person person = new Person();
            person.Greet();

            Student student = new Student();
            student.SetAge(20);
            student.Greet();    
            student.ShowAge();
            student.Study();

            Teacher teacher = new Teacher();    
            teacher.SetAge(45);
            teacher.Greet();
            teacher.Explain();

        }
    }



}*/
